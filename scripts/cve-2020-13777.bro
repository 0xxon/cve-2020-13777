module CVE_2020_13777;

export {
	redef enum Notice::Type += {
		## Server vulnerable to CVE-2020-13777 was detected
		CVE_2020_13777_Server,
		## Client resumed with ticket vulnerable to CVE-2020-13777
		CVE_2020_13777_Resumed
	};
}

redef record SSL::Info += {
	# saw client hello with potentially vulnerable session ticket handshake
	gnutls_ch: bool &default=F;
};

event ssl_session_ticket_handshake(c: connection, ticket_lifetime_hint: count, ticket: string)
	{
	if ( /^..\x00{16}.../ in ticket && |ticket| > 56 && bytestring_to_count(sub_bytes(ticket, 35, 2))+56 == |ticket| )
		NOTICE([$note=CVE_2020_13777_Server, $conn=c, $msg="Server potentially vulnerable to CVE-2020-13777 detected", $identifier=cat(c$id$orig_h)]);
	}

event ssl_change_cipher_spec(c: connection, is_orig: bool) &priority=-5
	{
	if ( ! is_orig || ! c$ssl$resumed )
		return;

	if ( c$ssl$gnutls_ch )
		NOTICE([$note=CVE_2020_13777_Resumed, $conn=c, $msg="Server potentially vulnerable to CVE-2020-13777 detected; client resumed with suspicious session ticket", $identifier=cat(c$id$orig_h)]);

	}

module SSL;

event ssl_extension(c: connection, is_orig: bool, code: count, val: string)
	{
	set_session(c);

	if ( ! is_orig || code != 35 )
		return;

	if ( /^\x00{16}.../ in val && |val| > 54 && bytestring_to_count(sub_bytes(val, 33, 2))+54 == |val| )
		c$ssl$gnutls_ch = T;
	}


